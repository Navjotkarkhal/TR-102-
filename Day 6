{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPDF5Y9pTtYPGhKmTmXMBf7",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Navjotkarkhal/TR-102-/blob/main/Dictionary_Practice_Questionsipynb.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Dictionary Problems**"
      ],
      "metadata": {
        "id": "TAFf_jEdD4ao"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Problem 1:**\n",
        "\n",
        "Basic Dictionary Operations:\n",
        "Create a dictionary named student with keys \"name,\" \"age,\" and \"grade,\" and assign\n",
        "appropriate values.\n",
        "Print the value associated with the \"age\" key.\n",
        "îŒ“ PRACTICE QUESTIONS:\n",
        "Update the \"grade\" to a new value.\n",
        "Add a new key-value pair for \"subject\" and its corresponding value."
      ],
      "metadata": {
        "id": "NGxSHNSaB1qK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Student = {'name':'navjot','age':19,'grade':'A'}\n",
        "Student1 = {'grade':'A+'}\n",
        "Student.update(Student1)\n",
        "print(Student)\n",
        "Student['Subject'] = 'math'\n",
        "print(Student)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u7res7vj_jCf",
        "outputId": "470ff2fa-dbc8-4354-c519-cf2f3ff9a3da"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'name': 'navjot', 'age': 19, 'grade': 'A+'}\n",
            "{'name': 'navjot', 'age': 19, 'grade': 'A+', 'Subject': 'math'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Problem 2:**\n",
        "Create two dictionaries, dict1 and dict2 , with at least three key-value pairs each.\n",
        "\n",
        "Merge these dictionaries into a new dictionary called merged_dict .\n",
        "\n",
        "Remove a key from merged_dict .\n",
        "\n",
        "Check if a specific key exists in dict1 ."
      ],
      "metadata": {
        "id": "qcif9d82rh__"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dict1 = {'1': 'apple', '2': 'banana', '3': 'cherry'}\n",
        "dict2 = {'4': 'apple', '5': 'banana', '6': 'cherry'}\n",
        "\n",
        "# Merge dict1 and dict2\n",
        "merged_dict = {**dict1, **dict2}\n",
        "\n",
        "# Remove the key '5'\n",
        "merged_dict.pop('5')\n",
        "\n",
        "# Print the resulting dictionary\n",
        "print(merged_dict)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TJ7HEG5Dr1TM",
        "outputId": "d7b991d7-1dc3-4643-8c4f-6d9d98b733b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'1': 'apple', '2': 'banana', '3': 'cherry', '4': 'apple', '6': 'cherry'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Problem 3:** Iterating Through a Dictionary:\n",
        "Use a loop to print all keys in the student dictionary.\n",
        "Use another loop to print all values in the student dictionary.\n",
        "Write a loop to print each key-value pair in the student dictionary"
      ],
      "metadata": {
        "id": "ozlLAbko1QU8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "student = {\"name\":\"navjot\",\"Roll_No\":120,\"Class\":\"CSE\"}\n",
        "print(student.keys())\n",
        "print(student.values())"
      ],
      "metadata": {
        "id": "5lFTwurP1UQg",
        "outputId": "bfbc9e47-8cab-4515-a5ef-b5777054a2f4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "dict_keys(['name', 'Roll_No', 'Class'])\n",
            "dict_values(['navjot', 120, 'CSE'])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Problem 4** Nested Dictionaries\n",
        "Create a dictionary named school with multiple students (nested dictionaries).\n",
        "Access and print information about a specific student within the school dictionary.\n"
      ],
      "metadata": {
        "id": "CHPHkQyv130G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "school= {\n",
        "\"student1\": {\n",
        "    \"name\":\"navjot\",\n",
        "    },\n",
        "\"student2\":{\n",
        "        \"name\":\"akash\",\n",
        "    }\n",
        "}\n",
        "print(school)\n"
      ],
      "metadata": {
        "id": "hMX9LsLIuD7P",
        "outputId": "46fda2f9-145a-4c7c-aa6c-f1e61ba9c86a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'student1': {'name': 'navjot'}, 'student2': {'name': 'akash'}}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "***Problem 5: ***Dictionary Functions:\n",
        "Use the len() function to find the number of items in a dictionary.\n",
        "Use the keys() , values() , and items() methods on a dictionary and print the result"
      ],
      "metadata": {
        "id": "QNdHJAZ4XAIt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "student = {\"name\":\"navjot\",\"Roll_No\":120,\"Class\":\"CSE\"}\n",
        "\n",
        "print(len(student))\n",
        "print(student.keys())\n",
        "print(student.values())\n",
        "print(student.items())"
      ],
      "metadata": {
        "id": "p3dlchgLYWPw",
        "outputId": "225ad006-6865-47c8-fe88-4d2d83d46b71",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3\n",
            "dict_keys(['name', 'Roll_No', 'Class'])\n",
            "dict_values(['navjot', 120, 'CSE'])\n",
            "dict_items([('name', 'navjot'), ('Roll_No', 120), ('Class', 'CSE')])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PRoblem 6:** Sorting a Dictionary:\n",
        "Create a dictionary with unsorted keys.\n",
        "Use the sorted() function to print the keys in alphabetical order"
      ],
      "metadata": {
        "id": "hFWYwHjDBiE3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "subjects = {\"1\": \"maths\", \"8\": \"physics\", \"2\": \"chemistry\"}\n",
        "mykeys = list(subjects)\n",
        "mykeys.sort()\n",
        "print(mykeys)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TcJHJfNfCJYX",
        "outputId": "396aaca7-377f-4502-e048-eb7dceaf18db"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['1', '2', '8']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Problem 7:**\n",
        "\n",
        "Dictionary Methods:\n",
        "Use the get() method to retrieve a value with a default if the key doesn't exist.\n",
        "Use the pop() method to remove and return a specific key-value pair.\n"
      ],
      "metadata": {
        "id": "m5_HLQq9DY9v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "student = {\"name\":\"navjot\",\"Roll_No\":120,\"Class\":\"CSE\"}\n",
        "print(student.get('name'))\n",
        "print(student.pop('Class'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZoYwSU9oCdMJ",
        "outputId": "b53222bf-89d9-43ad-9769-1c8b606c8abd"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "navjot\n",
            "CSE\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "3GYP1vf9Du7C"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
